version: '3.7'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: conexaopet_web
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - DB_ENGINE=${DB_ENGINE}
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - EC2_HOST_DNS=${EC2_HOST_DNS}
      - EC2_SSH_KEY_PEM=${EC2_SSH_KEY_PEM}
      - EC2_USERNAME=${EC2_USERNAME}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - STATICFILES=${STATICFILES}
      - MEDIAFILES=${MEDIAFILES}
      - ACCESS_TOKEN_LIFETIME=${ACCESS_TOKEN_LIFETIME}
      - REFRESH_TOKEN_LIFETIME=${REFRESH_TOKEN_LIFETIME}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
    command: >
      sh -c "python manage.py migrate && gunicorn conexaopet.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app/
      - staticfiles:/app/media
      - ./media:/app/media
    expose:
      - 8000
    depends_on:
      - db

  db:
    image: postgres:15.6
    container_name: conexaopet_db
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - DB_ENGINE=${DB_ENGINE}
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - EC2_HOST_DNS=${EC2_HOST_DNS}
      - EC2_SSH_KEY_PEM=${EC2_SSH_KEY_PEM}
      - EC2_USERNAME=${EC2_USERNAME}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - STATICFILES=${STATICFILES}
      - MEDIAFILES=${MEDIAFILES}
      - ACCESS_TOKEN_LIFETIME=${ACCESS_TOKEN_LIFETIME}
      - REFRESH_TOKEN_LIFETIME=${REFRESH_TOKEN_LIFETIME}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - POSTGRES_DB=conexaopet_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/conexaopet-api_postgres_data/data/ 
      - ./scripts/populate_db.sql:/populate_db.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 3

  populate_db:
    image: postgres:15.6
    volumes:
      - ./scripts/:/scripts
    command: >
      sh -c "sleep 5 && PGPASSWORD=postgres psql -U postgres -h db -d conexaopet_db -a -f /scripts/populate_db.sql"
    depends_on:
      db:
        condition: service_healthy

  nginx:
    container_name: conexaopet_nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - DB_ENGINE=${DB_ENGINE}
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - EC2_HOST_DNS=${EC2_HOST_DNS}
      - EC2_SSH_KEY_PEM=${EC2_SSH_KEY_PEM}
      - EC2_USERNAME=${EC2_USERNAME}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - STATICFILES=${STATICFILES}
      - MEDIAFILES=${MEDIAFILES}
      - ACCESS_TOKEN_LIFETIME=${ACCESS_TOKEN_LIFETIME}
      - REFRESH_TOKEN_LIFETIME=${REFRESH_TOKEN_LIFETIME}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
    volumes:
      - staticfiles:/app/media
      - ./media:/app/media
    ports:
      - 8008:80
    depends_on:
      - web

volumes:
  postgres_data:
  staticfiles: